<%@ jet 
imports="
    org.talend.core.model.process.INode 
    org.talend.core.model.process.ElementParameterParser 
    org.talend.core.model.process.IConnection
    org.talend.core.model.process.IElementParameter
    org.talend.designer.codegen.config.CodeGeneratorArgument
    org.talend.designer.codegen.config.CamelEndpointBuilder
    java.util.List
    java.util.Map
    java.io.UnsupportedEncodingException
    java.net.URLEncoder
" 
%>
<%
    CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
    INode node = (INode) codeGenArgument.getArgument();
    String cid = node.getUniqueName();

    CamelEndpointBuilder builder = CamelEndpointBuilder.getBuilder();

	String accountName = ElementParameterParser.getValue(node, "__STORAGE_ACCOUNT_NAME__");
    String containerName = ElementParameterParser.getValue(node, "__STORAGE_CONTAINER_NAME__");

    builder.setComponent("azure-blob");
    builder.useDoubleSlash(false);
    builder.setName(accountName.concat("+\"/\"+").concat(containerName));

    builder.addParam("credentials", "\"#credentials_" + cid + "\"");
	
	String operation = ElementParameterParser.getValue(node, "__OPERATION__");
	builder.addParam("operation", "\"" + operation + "\"");
	

    List<Map<String, String>> tableValues = (List<Map<String, String>>) ElementParameterParser.getObjectValue(node, "__URI_OPTIONS__");
    for (Map<String, String> map : tableValues) {
        String argName = map.get("NAME").trim();
        String argValue = map.get("VALUE").trim();
        if(argName.startsWith("\"") && argName.endsWith("\"") && argName.length() >= 2) {
            argName = argName.substring(1, argName.length() - 1);
        }
        builder.addParam(argName, argValue);
    }

    String useMessageHeadersUserDefined = ElementParameterParser.getValue(node, "__USE_MESSAGE_HEADERS_USER_DEFINED__");

    List<Map<String, String>> userDefinedHeaders = (List<Map<String, String>>) ElementParameterParser.getObjectValue(node, "__MESSAGE_HEADERS_USER_DEFINED__");

    List<Map<String, String>> messageHeaders = (List<Map<String, String>>) ElementParameterParser.getObjectValue(node, "__MESSAGE_HEADERS__");

    String uri = builder.build();
   
    List< ? extends IConnection> conns = node.getIncomingConnections();

    if (conns.size() > 0 && messageHeaders.size() > 0) {
        StringBuilder sb1 = new StringBuilder();
        for (Map<String, String> map : messageHeaders) {
            String header = map.get("MESSAGE_HEADER");
            String value = map.get("MESSAGE_HEADER_VALUE");

            sb1.append(".setHeader(\"");
            sb1.append(header);
            sb1.append("\",");
            sb1.append("constant(");
            sb1.append(value);
            sb1.append("))");
        }

        if (("true".equals(useMessageHeadersUserDefined)) && (userDefinedHeaders.size()>0)) {
            sb1.append(".setHeader(\"");
            sb1.append("CamelAwsS3Headers");
            sb1.append("\",");
            sb1.append("constant(");
            sb1.append(cid+"userDefinedHeaders");
            sb1.append("))");
        }
%>
    <%=sb1.toString()%>.to(<%=uri%>)

<% } else { %>
    <%
        if(conns.size()>0) {
    %>
            .to(<%=uri%>)
    <%
        } else {
    %>
            from(<%=uri%>)
    <%
        }
    %>
<%}%>